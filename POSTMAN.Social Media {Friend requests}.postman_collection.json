{
	"info": {
		"_postman_id": "566e13ad-d2ed-47cc-8985-d35767abe008",
		"name": "Social Media {Friend requests}",
		"description": "# ðŸš€ Get started here\n\nThis Postgres tempelate guides you through Social Media API operations (GET, POST, PUT, DELETE), variables\n\n## ðŸ”– **How to use this template**\n\n1. First Signup\n    \n2. Login with credentials\n    \n3. See your account detail\n    \n4. Search for other user by name or email\n    \n5. Send Friend request by passing other user id",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23379326"
	},
	"item": [
		{
			"name": "Get Current user detail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json()",
							"",
							"pm.collectionVariables.set(\"email\", jsonData.email);",
							"pm.collectionVariables.set(\"username\", jsonData.username);",
							"pm.collectionVariables.set(\"first_name\", jsonData.first_name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/user",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"user"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Post data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Successful POST request\", function () {",
							"//     pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"// });",
							"// var jsonData = pm.response.json()",
							"// pm.collectionVariables.set(\"access_token\", jsonData.access);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"validmail@gmail.com\",\n    \"password\":\"@kff\",\n    \"username\":\"shantanu\",\n    \"first_name\":\"shantanu\"\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/user/friend_request",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"user",
						"friend_request"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Update data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"Vikramditya\",\n    \"email\":\"validmail@gmail.com\",\n    \"username\":\"shantanu\",\n    \"password\":\"@kff\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/user/{{user_id}}/update/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"user",
						"{{user_id}}",
						"update",
						""
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/user/{{user_id}}/delete/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"user",
						"{{user_id}}",
						"delete",
						""
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Login {Get access Token for user}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"var jsonData = pm.response.json()",
							"pm.collectionVariables.set(\"access_token\", jsonData.access);",
							"pm.collectionVariables.set(\"user_id\",jsonData.user_id)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"validmail@gmail.com\",\n    \"password\":\"@kff\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/token/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"token",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Signup {Create user}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Successful POST request\", function () {",
							"//     pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"// });",
							"// var jsonData = pm.response.json()",
							"// pm.collectionVariables.set(\"access_token\", jsonData.access);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"validmail@gmail.com\",\n    \"password\":\"@kff\",\n    \"username\":\"shantanu\",\n    \"first_name\":\"shantanu\"\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/user/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "pending_requests",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/pending_requests",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"pending_requests"
					]
				}
			},
			"response": []
		},
		{
			"name": "UserSearch",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/user/search/?keyword=Shan",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"user",
						"search",
						""
					],
					"query": [
						{
							"key": "keyword",
							"value": "Shan"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Accept/ Reject Friend request",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_user_id\":\"2\",\r\n    \"action\":\"accept\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/friend_request_response/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"friend_request_response",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Friends List",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_user_id\":\"2\",\r\n    \"action\":\"accept\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/friends",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"friends"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send Friend request",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"to_user_id\":2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/friend_request/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"friend_request",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me"
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "first_name",
			"value": ""
		}
	]
}